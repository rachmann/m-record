<Window x:Class="m_record.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        Title="m-record"
        Width="160" Height="200"
        ShowInTaskbar="True"
        WindowStartupLocation="Manual"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        Icon="appicon.ico"
        >

    <Window.Resources>
        <Style x:Key="CloseIconDarkModeStyle" TargetType="iconPacks:PackIconMaterial">
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, ElementName=CloseButton}" Value="True">
                    <Setter Property="Foreground" Value="Orange"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MenuIconDarkModeStyle" TargetType="iconPacks:PackIconMaterial">
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, ElementName=ContextMenuButton}" Value="True">
                    <Setter Property="Foreground" Value="Orange"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DarkModeButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                              BorderBrush="{TemplateBinding BorderBrush}" 
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#222"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#444"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DarkModeMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="#222"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DarkModeTopButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Black"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DarkModePlayStopButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Orange"/>
                    <Setter Property="Background" Value="Black"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Border BorderBrush="#888" BorderThickness="1" CornerRadius="8" Background="White">
        <Grid>
            <!-- Top bar with context menu and close button -->
            <Grid Height="32" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="32"/>
                </Grid.ColumnDefinitions>
                <!-- Context menu icon -->
                <Button Grid.Column="0" Name="ContextMenuButton" Padding="0" Margin="0"
                    Width="16" Height="16" BorderThickness="0"
                    HorizontalAlignment="Left" VerticalAlignment="Top">
                    <iconPacks:PackIconMaterial x:Name="MenuIcon"
                                Kind="Menu"
                                Width="14" Height="14" />

                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Settings" Command="{Binding OpenSettingsCommand}">
                                <MenuItem.Icon>
                                    <iconPacks:PackIconMaterial x:Name="SettingsIcon" Kind="Cog" Width="16" Height="16"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Help" Command="{Binding OpenHelpCommand}">
                                <MenuItem.Icon>
                                    <iconPacks:PackIconMaterial x:Name="HelpIcon" Kind="HelpCircleOutline" Width="16" Height="16"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="About" Command="{Binding OpenAboutCommand}">
                                <MenuItem.Icon>
                                    <iconPacks:PackIconMaterial x:Name="AboutIcon" Kind="InformationOutline" Width="16" Height="16"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
                <Button Grid.Column="2" Name="CloseButton" Padding="0" Margin="0"
                    Width="16" Height="16" BorderThickness="0"
                    HorizontalAlignment="Right" VerticalAlignment="Top"
                    Command="{Binding CloseCommand}">
                    <iconPacks:PackIconMaterial x:Name="CloseIcon"
                                Kind="Close"
                                Width="14" Height="14" />

                </Button>
            </Grid>

            <!-- Main content -->
            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,35,0,0">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <!-- Status Icon: Green or Red Circle -->
                    <Button x:Name="StatusIconButton"
                        Width="40" Height="40"
                        Background="Transparent"
                        BorderThickness="0"
                              Margin="0,0,5,0" 
                        Command="{Binding CaptureScreensCommand}">
                        <iconPacks:PackIconMaterial x:Name="StatusIcon"
                                Kind="CheckboxBlankCircle"
                                Width="38" Height="38"
                                Margin="0,0,0,0"
                                Foreground="{Binding StatusIconForeground}" />
                    </Button>
                    <!-- Play/Stop Button -->
                    <Button Name="PlayStopButton" 
                            Width="40" Height="40" 
                            Background="Transparent" 
                            BorderThickness="0"
                            Command="{Binding PlayStopCommand}">
                        <iconPacks:PackIconMaterial
                                Kind="{Binding PlayStopIconKind}"
                                Width="38" Height="38"
                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    </Button>
                </StackPanel>
                <!-- Timer -->
                <TextBlock Name="TimerText"
                   Text="{Binding TimerText, Mode=OneWay}"
                   FontSize="20"
                   FontWeight="Bold"
                   HorizontalAlignment="Center"
                   Margin="0,10,0,0"/>
            </StackPanel>
            <DockPanel LastChildFill="True" VerticalAlignment="Bottom" Height="60" Margin="8,0,8,8">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <TextBox x:Name="NotificationArea"
                        FontSize="10"
                        TextWrapping="NoWrap"
                        AcceptsReturn="True"
                        IsReadOnly="True"
                        HorizontalScrollBarVisibility="Auto"
                        VerticalScrollBarVisibility="Auto"
                        Visibility="{Binding NotificationAreaVisibility, Mode=OneWay}"
                        Text="{Binding NotificationText, Mode=OneWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <i:InvokeCommandAction Command="{Binding NotificationAreaMouseEnterCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding NotificationAreaMouseLeaveCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="GotFocus">
                                <i:InvokeCommandAction Command="{Binding NotificationAreaGotFocusCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding NotificationAreaLostFocusCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </ScrollViewer>
            </DockPanel>
        </Grid>
    </Border>
</Window>